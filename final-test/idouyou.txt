int main(void){
  int result, i;

  result = yyparse();

  init();

  if(!result){
    printTree(parse_result);
  }
  
  printf("or   $sp, $fp, $fp       #$sp<-$fp \n"
	 "lw   $fp, fp_loc($sp)    #restore $fp from stack frame\n"
	 "lw   $ra, ra_loc($sp)    #restore $ra from stack frame\n"
	 "addi $sp, $sp, framesize #deallocate stack frame\n"
	 "jr   $ra                 #return from subroutine 'sort1'\n"
	 "nop                      #(delay slot)\n");

  printf(".data 0x10004000\n");
  for(i=0; i<t_count; i++){
    if(table[i].mem_len != 4){
      printf("_%s: .space %d\n", table[i].symname, table[i].mem_len);
    }else{
      printf("_%s: .word 0x0000\n", table[i].symname);
    }
  }
  return 0;
}
